# Copyright (C) 2022  Zach Bensley
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

module KazooSDK
  class Client
    attr_reader base_url: String
    attr_reader account_name: String?
    attr_reader username: String?
    attr_reader password: String?
    attr_reader api_key: String?
    attr_reader adapter: Symbol
    attr_reader options: Hash[untyped, untyped]
    attr_reader validate_request: bool
    attr_reader account_id: String

    def initialize: (base_url: String, ?account_name: String?, ?username: String?, ?password: String?, ?api_key: String?, ?adapter: Symbol, ?options: Hash[untyped, untyped], ?validate_request: bool) -> void

    @connection: Faraday::Connection
    def connection: () -> Faraday::Connection

    def account: () -> Account

    def schema: () -> Schema

    def storage: () -> Storage

    private

    attr_accessor x_auth_token: String

    def sign_in: () -> void

    @capabilities: Hash[Symbol, untyped]
    def get_capabilities: () -> void
  end
end
